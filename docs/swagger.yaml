basePath: /
definitions:
  request.CreatePayrollPeriodRequest:
    properties:
      end_date:
        example: "2025-08-31"
        type: string
      start_date:
        example: "2025-08-01"
        type: string
    required:
    - end_date
    - start_date
    type: object
  request.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  response.LoginResponse:
    properties:
      token:
        type: string
    type: object
host: localhost:8009
info:
  contact: {}
  description: API service for Payslip.
  title: Payslip API
  version: "1.0"
paths:
  /api/attendance:
    post:
      consumes:
      - application/json
      description: Submit attendance for the current day. Attendance is not allowed
        on weekends. Duplicate same-day attendance is ignored.
      produces:
      - application/json
      responses:
        "200":
          description: attendance submitted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: bad request / validation error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Submit attendance
      tags:
      - Attendance
  /api/me:
    get:
      description: Get current logged-in user's info from JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - User
  /api/payroll-period:
    post:
      consumes:
      - application/json
      description: Create a new payroll period and enqueue for processing
      parameters:
      - description: Payroll Period
        in: body
        name: payroll_period
        required: true
        schema:
          $ref: '#/definitions/request.CreatePayrollPeriodRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create payroll period
      tags:
      - PayrollPeriod
  /login:
    post:
      consumes:
      - application/json
      description: Login with username and password
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
